<?xml version="1.0"?>
<launch>
	
	 <remap from="/my_robot/laser/scan" to="scan"/> 
	
	  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="world" default="assignment_world" />
  
  <!-- By default, use the urdf location provided from the package -->
  <arg name="urdf_path" default="$(find assignment2)/urdf/my_robot.urdf"/>
  
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" value="$(find assignment2)/worlds/$(arg world).world"/>
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  
  <!-- launch the gazebo simulator and spawn the robot -->
  <include file="$(find new_moveit)/launch/demo_gazebo.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
    <arg name="urdf_path" value="$(arg urdf_path)"/>
  </include>
  	<param name="use_sim_time" value="true"/>
  	
      <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
	  <param name="base_frame" value="base_link"/>
      <param name="map_update_interval" value="5.0"/>
      <param name="maxUrange" value="16.0"/>
      <param name="sigma" value="0.05"/>
      <param name="kernelSize" value="1"/>
      <param name="lstep" value="0.05"/>
      <param name="astep" value="0.03"/>
      <param name="iterations" value="3"/>
      <param name="lsigma" value="0.075"/>
      <param name="ogain" value="3.0"/>
      <param name="lskip" value="0"/>
      <param name="srr" value="0.1"/>
      <param name="srt" value="0.1"/>
      <param name="str" value="0.1"/>
      <param name="stt" value="0.1"/>
      <param name="linearUpdate" value="1.0"/>
      <param name="angularUpdate" value="0.2"/>
      <param name="temporalUpdate" value="3.0"/>
      <param name="resampleThreshold" value="0.5"/>
      <param name="particles" value="20"/>
      <param name="xmin" value="-50.0"/>
      <param name="ymin" value="-50.0"/>
      <param name="xmax" value="50.0"/>
      <param name="ymax" value="50.0"/>
      <param name="delta" value="0.05"/>
      <param name="llsamplerange" value="0.01"/>
      <param name="llsamplestep" value="0.01"/>
      <param name="lasamplerange" value="0.005"/>
      <param name="lasamplestep" value="0.005"/>
      <param name="transform_publish_period" value="0.0005"/>
    </node>
    
 
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
  	<rosparam file="$(find assignment2)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
  	<rosparam file="$(find assignment2)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
  	<rosparam file="$(find assignment2)/param/local_costmap_params.yaml" command="load"/>
  	<rosparam file="$(find assignment2)/param/global_costmap_params.yaml" command="load"/>
  	<rosparam file="$(find assignment2)/param/base_local_planner_params.yaml" command="load"/>
  	<rosparam file="$(find assignment2)/param/move_base_params.yaml" command="load"/>
  </node>

 

   <node name="marker_server" pkg="assignment2" type="marker_server" />
  
  
   <node pkg="aruco_ros" type="marker_publisher" name="marker_publisher" args = "image:=/robot/camera1/image_raw"/>
   
   <node pkg="image_view" type="image_view" name="image_view" args = "/image:=/marker_publisher/result"/>
   
   <node pkg="aruco_ros" type="marker_client" name="marker_client"/>
   
   
   

</launch>
